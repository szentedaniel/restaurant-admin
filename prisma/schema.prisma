generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model allergenek {
  id                       Int                        @id @default(autoincrement())
  neve                     String                     @db.VarChar(255)
  kod                      Int
  allergenek_fordito       allergenek_fordito[]
  termekek_allergenek_rend termekek_allergenek_rend[]
}

model asztalok {
  id         Int          @id @default(autoincrement())
  etterem_id Int
  ferohely   Int
  elerheto   Int          @default(1)
  kod        String       @db.VarChar(45)
  ettermek   ettermek     @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_asztalok_etteremId_ettermek")
  foglalasok foglalasok[]
  rendelesek rendelesek[]

  @@index([etterem_id], map: "FK_asztalok_etteremId_ettermek")
}

model city_zip {
  id             Int     @id @default(autoincrement())
  cit_zip        String? @db.VarChar(8)
  cit_name       String? @db.VarChar(64)
  cit_cty_code   String? @db.VarChar(2)
  cit_lat        Float?  @db.Float
  cit_long       Float?  @db.Float
  cit_cso_code   Int?
  cit_rig_id     Int?
  cit_range      Float?  @db.Float
  cit_population Int?
  cit_homes      Int?

  @@index([cit_zip], map: "cit_zip")
}

model etterem_kategoria_rend {
  etterem_id   Int
  kategoria_id Int
  ettermek     ettermek   @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_etteremKategoriaRend_etteremId_ettermek")
  kategoriak   kategoriak @relation(fields: [kategoria_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_etteremKategoriaRend_kategoriaId_kategoriak")

  @@id([etterem_id, kategoria_id])
  @@index([etterem_id], map: "FK_etteremKategoriaRend_etteremId_ettermek")
  @@index([kategoria_id], map: "FK_etteremKategoriaRend_kategoriaId_kategoriak")
}

model etterem_konyhatipus_rend {
  konyha_tipus_id Int
  etterem_id      Int
  konyhatipusok   konyhatipusok @relation(fields: [konyha_tipus_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_etteremKonyhatipusRend_tipusId_konyhatipusok")
  ettermek        ettermek      @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_etteremKonyhatipusokRend_etteremId_ettermek")

  @@id([etterem_id, konyha_tipus_id])
  @@index([konyha_tipus_id], map: "FK_etteremKonyhatipusRend_tipusId_konyhatipusok")
  @@index([etterem_id], map: "FK_etteremKonyhatipusokRend_etteremId_ettermek")
}

model etterem_nyelv {
  etterem_id Int
  nyelv_id   Int       @db.UnsignedInt
  ettermek   ettermek  @relation(fields: [etterem_id], references: [id], onDelete: Cascade, map: "fk_etterem_nyelv_ettermek")
  languages  languages @relation(fields: [nyelv_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_etterem_nyelv_languages")

  @@unique([etterem_id, nyelv_id], map: "unq_etterem_nyelv")
  @@index([nyelv_id], map: "fk_etterem_nyelv_languages")
}

model etterem_tipus_rend {
  etterem_id      Int
  tipus_id        Int
  ettermek        ettermek        @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EtteremKatRend_etteremId_ettermek")
  etterem_tipusok etterem_tipusok @relation(fields: [tipus_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_EtteremKatRend_kategoriaId_kategoriak")

  @@id([etterem_id, tipus_id])
  @@index([etterem_id], map: "FK_EtteremKatRend_etteremId_ettermek")
  @@index([tipus_id], map: "FK_EtteremKatRend_kategoriaId_kategoriak")
}

model etterem_tipusok {
  id                      Int                       @id @default(autoincrement())
  etterem_tipus_rend      etterem_tipus_rend[]
  etterem_tipusok_fordito etterem_tipusok_fordito[]
}

model ettermek {
  id                       Int                        @id @default(autoincrement())
  city_name                String                     @db.VarChar(255)
  address                  String                     @db.VarChar(255)
  name                     String                     @db.VarChar(155)
  adoszam                  Float                      @db.Float
  lat                      Float?
  lng                      Float?
  telefon                  String?                    @db.VarChar(45)
  email                    String?                    @db.VarChar(255)
  nyitvatartas             Json?
  weblap                   String?                    @db.VarChar(255)
  img_path                 String?                    @db.VarChar(255)
  img_bg_path              String?                    @db.VarChar(255)
  ceg                      String?                    @db.VarChar(255)
  asztalok                 asztalok[]
  etterem_kategoria_rend   etterem_kategoria_rend[]
  etterem_konyhatipus_rend etterem_konyhatipus_rend[]
  etterem_nyelv            etterem_nyelv[]
  etterem_tipus_rend       etterem_tipus_rend[]
  foglalasok               foglalasok[]
  rendelesek               rendelesek[]
  termekek                 termekek[]
  user                     user[]
}

model foglalasok {
  id             Int       @id
  asztal_id      Int?
  user_id        Int
  etterem_id     Int
  kezdet         DateTime  @db.DateTime(0)
  vege           DateTime  @db.DateTime(0)
  foglalas_ideje DateTime  @db.Timestamp(0)
  asztalok       asztalok? @relation(fields: [asztal_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_foglalasok_asztalId_asztalok")
  ettermek       ettermek  @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_foglalasok_etteremId_ettermek")
  user           user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_foglalasok_userId_user")

  @@index([asztal_id], map: "FK_foglalasok_asztalId_asztalok")
  @@index([etterem_id], map: "FK_foglalasok_etteremId_ettermek")
  @@index([user_id], map: "FK_foglalasok_userId_user")
}

model kategoriak {
  id                     Int                      @id @default(autoincrement())
  parent_id              Int?
  kategoriak             kategoriak?              @relation("kategoriakTokategoriak_parent_id", fields: [parent_id], references: [id], onDelete: Cascade, map: "fk_kategoria_parent")
  etterem_kategoria_rend etterem_kategoria_rend[]
  other_kategoriak       kategoriak[]             @relation("kategoriakTokategoriak_parent_id")
  kategoriak_fordito     kategoriak_fordito[]
  termekek               termekek[]

  @@index([parent_id], map: "asd_idx")
}

model konyhatipusok {
  id                       Int                        @id @default(autoincrement())
  etterem_konyhatipus_rend etterem_konyhatipus_rend[]
  konyhatipusok_fordito    konyhatipusok_fordito[]
}

model log {
  id              Int      @id @default(autoincrement())
  etterem_id      Int
  user_id         Int
  muvelet         String   @db.VarChar(45)
  Table_name      String   @db.VarChar(45)
  FIeld_name      String   @db.VarChar(45)
  Field_value_old String   @db.VarChar(45)
  Field_value_new String   @db.VarChar(45)
  timestamp       DateTime @db.Timestamp(0)
}

model rendeles_statusz {
  id         Int          @id
  statusz    String       @db.VarChar(45)
  rendelesek rendelesek[]
}

model rendelesek {
  id               Int              @id
  user_id          Int
  etterem_id       Int
  statusz_id       Int
  termek_id        Int
  asztal_id        Int?
  mennyiseg        Int
  rendeles_ideje   DateTime         @db.Timestamp(0)
  kupon            String?          @db.VarChar(45)
  rendeles_id      Int
  asztalok         asztalok?        @relation(fields: [asztal_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_rendelesek_asztalId_asztalok")
  ettermek         ettermek         @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_rendelesek_etteremId_ettermek")
  rendeles_statusz rendeles_statusz @relation(fields: [statusz_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_rendelesek_statuszId_rendelesStatusz")
  termekek         termekek         @relation(fields: [termek_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_rendelesek_termekId_termekek")
  user             user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_rendelesek_userId_user")

  @@index([asztal_id], map: "FK_rendelesek_asztalId_asztalok")
  @@index([etterem_id], map: "FK_rendelesek_etteremId_ettermek")
  @@index([statusz_id], map: "FK_rendelesek_statuszId_rendelesStatusz")
  @@index([termek_id], map: "FK_rendelesek_termekId_termekek")
  @@index([user_id], map: "FK_rendelesek_userId_user")
}

model termekek {
  id                       Int                        @id @default(autoincrement())
  etterem_id               Int
  kategoria_id             Int?
  ar_forint                Float
  ar_euro                  Float?
  mennyis_g                String?                    @map("mennyis√©g") @db.VarChar(45)
  img_path                 String?                    @db.VarChar(255)
  elerheto                 Int                        @default(0)
  ettermek                 ettermek                   @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_termekek_etteremId_ettermek")
  kategoriak               kategoriak?                @relation(fields: [kategoria_id], references: [id], onUpdate: NoAction, map: "fk_termekek_kategoriaid_kategoriak")
  rendelesek               rendelesek[]
  termekek_allergenek_rend termekek_allergenek_rend[]
  termekek_fordito         termekek_fordito[]

  @@index([etterem_id], map: "FK_termekek_etteremId_ettermek")
  @@index([kategoria_id], map: "FK_termekek_kategoriaId_kategoriak")
}

model termekek_allergenek_rend {
  allergen_id Int
  termek_id   Int
  termekek    termekek   @relation(fields: [termek_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_allergenekRend_termekId_termekek")
  allergenek  allergenek @relation(fields: [allergen_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_termekekAllergenekRend_allergenId_allergenek")

  @@id([allergen_id, termek_id])
  @@index([termek_id], map: "FK_allergenekRend_termekId_termekek")
  @@index([allergen_id], map: "FK_termekekAllergenekRend_allergenId_allergenek")
}

model termekek_fordito {
  id            Int       @id @default(autoincrement())
  termek_id     Int
  nyelv_id      Int       @db.UnsignedInt
  termek_nev    String?   @db.VarChar(45)
  termek_leiras String?   @db.VarChar(255)
  termekek      termekek  @relation(fields: [termek_id], references: [id], onDelete: Cascade, map: "fk_310")
  languages     languages @relation(fields: [nyelv_id], references: [id], onDelete: Cascade, map: "fk_termekek_fordito_languages")

  @@index([termek_id], map: "FK_312")
  @@index([nyelv_id], map: "fk_termekek_fordito_languages")
}

model user {
  id         Int          @id @default(autoincrement())
  email      String       @unique(map: "UNIQ_8D93D649E7927C74") @db.VarChar(180)
  etterem_id Int?
  role       Json
  password   String       @db.VarChar(255)
  name       String       @db.VarChar(255)
  phone      String?      @db.VarChar(45)
  updated_at DateTime     @default(now()) @db.Timestamp(0)
  created_at DateTime     @default(now()) @db.Timestamp(0)
  verify     String?      @unique
  ettermek   ettermek?    @relation(fields: [etterem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_etteremId_ettermek")
  foglalasok foglalasok[]
  rendelesek rendelesek[]
  settings   settings?

  @@index([etterem_id], map: "FK_user_etteremId_ettermek")
}

model settings {
  user_id   Int   @id
  settings  Json?
  shortcuts Json?
  user      user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_settings_user")
}

model adagok {
  id        Int     @id
  termek_id Int
  ar_forint Float
  ar_euro   Float?
  mennyiseg String? @db.VarChar(45)
  elerheto  Boolean @default(dbgenerated("(true)"))
}

model etterem_tipusok_fordito {
  tipus_id        Int
  nyelv_id        Int             @db.UnsignedInt
  tipus_nev       String          @db.VarChar(45)
  etterem_tipusok etterem_tipusok @relation(fields: [tipus_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_etterem_tipusok_fordito")
  languages       languages       @relation(fields: [nyelv_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_etterem_tipusok_fordito_lang")

  @@unique([tipus_id, nyelv_id], map: "unq_etterem_tipusok_fordito_tipus_id")
  @@index([nyelv_id], map: "fk_etterem_tipusok_fordito_lang")
}

model konyhatipusok_fordito {
  tipus_id      Int
  nyelv_id      Int           @db.UnsignedInt
  tipus_nev     String?       @db.VarChar(45)
  konyhatipusok konyhatipusok @relation(fields: [tipus_id], references: [id], onDelete: Cascade, map: "fk_konyhatipusok_fordito")
  languages     languages     @relation(fields: [nyelv_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_konyhatipusok_fordito_lang")

  @@unique([tipus_id, nyelv_id], map: "unq_konyhatipusok_fordito")
  @@index([nyelv_id], map: "fk_konyhatipusok_fordito_lang")
}

model languages {
  id                      Int                       @id @default(autoincrement()) @db.UnsignedInt
  name                    String?                   @db.Char(49)
  kod                     String?                   @db.Char(2)
  allergenek_fordito      allergenek_fordito[]
  etterem_nyelv           etterem_nyelv[]
  etterem_tipusok_fordito etterem_tipusok_fordito[]
  kategoriak_fordito      kategoriak_fordito[]
  konyhatipusok_fordito   konyhatipusok_fordito[]
  termekek_fordito        termekek_fordito[]
}

model allergenek_fordito {
  allergen_id Int
  nyelv_id    Int        @db.UnsignedInt
  nev         String     @db.VarChar(255)
  allergenek  allergenek @relation(fields: [allergen_id], references: [id], onDelete: Cascade, map: "fk_allergenek_fordito")
  languages   languages  @relation(fields: [nyelv_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_allergenek_fordito_lang")

  @@unique([allergen_id, nyelv_id], map: "unq_allergenek_fordito")
  @@index([nyelv_id], map: "fk_allergenek_fordito_lang")
}

model kategoriak_fordito {
  kategoria_id Int
  nyelv_id     Int        @db.UnsignedInt
  nev          String     @db.VarChar(255)
  kategoriak   kategoriak @relation(fields: [kategoria_id], references: [id], onDelete: Cascade, map: "fk_kategoriak_fordito")
  languages    languages  @relation(fields: [nyelv_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_kategoriak_fordito_lang")

  @@unique([kategoria_id, nyelv_id], map: "unq_kategoriak_fordito")
  @@index([nyelv_id], map: "fk_kategoriak_fordito_lang")
}
